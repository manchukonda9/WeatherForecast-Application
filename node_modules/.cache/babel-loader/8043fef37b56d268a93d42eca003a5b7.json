{"ast":null,"code":"var _jsxFileName = \"/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\")); // const data = await api_call.json();\n\n      const data = await api_call.json();\n\n      if (city && country) {\n        //console.log(data);\n        console.log(\"in weatherjs\");\n        console.log(data);\n        const dt = data.list[0].dt_txt.split(\" \");\n        console.log(dt);\n        this.setState({\n          city: data.name.city\n        });\n      } else {}\n    };\n  }\n\n  render() {\n    //console.log(this.props.json1);\n    // console.log(d.city.name);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"City:\", data.name.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Date:\", this.props.date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Time:\", this.props.time), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"temp:\", this.props.temp));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js"],"names":["React","Component","Form","API_KEY","Weather","state","city","undefined","getWeather","e","preventDefault","target","elements","value","country","api_call","fetch","data","json","console","log","dt","list","dt_txt","split","setState","name","render","props","date","time","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACtB;AACFC,MAAAA,IAAI,EAACC;AADH,KADsB;;AAAA,SAI5BC,UAJ4B,GAIf,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMJ,IAAI,GAAGG,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBN,IAAlB,CAAuBO,KAApC;AACA,YAAMC,OAAO,GAAGL,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAA1C,CAHsB,CAIvB;;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,8DAAuDV,IAAvD,cAA+DQ,OAA/D,oBAAgFX,OAAhF,mBAA5B,CALuB,CAMvB;;AACC,YAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAIZ,IAAI,IAAIQ,OAAZ,EAAqB;AACnB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,cAAMI,EAAE,GAAGJ,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaC,MAAb,CAAoBC,KAApB,CAA0B,GAA1B,CAAX;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACA,aAAKI,QAAL,CAAc;AACVnB,UAAAA,IAAI,EAACW,IAAI,CAACS,IAAL,CAAUpB;AADL,SAAd;AAID,OAVD,MAUO,CAEN;AACF,KAzByB;AAAA;;AA0B5BqB,EAAAA,MAAM,GAAG;AACL;AAED;AACC,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKnB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASS,IAAI,CAACS,IAAL,CAAUpB,IAAnB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKsB,KAAL,CAAWC,IAApB,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKD,KAAL,CAAWE,IAApB,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKF,KAAL,CAAWG,IAApB,CALA,CAFJ;AAWH;;AAzC2B;;AA4ChC,eAAe3B,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form';\n\n\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\n\nclass Weather extends Component {\n    state={\n        city:undefined\n    }\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n       // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n       const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`);\n       // const data = await api_call.json();\n        const data = await api_call.json();\n        if (city && country) {\n          //console.log(data);\n          console.log(\"in weatherjs\");\n          console.log(data);\n          const dt = data.list[0].dt_txt.split(\" \");\n          console.log(dt)\n          this.setState({\n              city:data.name.city\n          });\n       \n        } else {\n      \n        }\n      }\n    render() { \n        //console.log(this.props.json1);\n       \n       // console.log(d.city.name);\n        return (  \n           \n            <div>\n            <Form getWeather={this.getWeather}/> \n            <p>City:{data.name.city}</p>\n            <p>Date:{this.props.date}</p>\n            <p>Time:{this.props.time}</p>\n            <p>temp:{this.props.temp}</p>\n            \n            \n            </div> );\n    }\n}\n \nexport default Weather;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
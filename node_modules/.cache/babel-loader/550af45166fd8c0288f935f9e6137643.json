{"ast":null,"code":"var _jsxFileName = \"/Users/gopikrishnamanchukonda/weatherass/src/App.js\";\nimport React from 'react';\nimport Form from './components/Form';\nimport './App.css';\nimport Weather from './components/Weather';\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\")); // const data = await api_call.json();\n\n      const data = await api_call.json();\n\n      if (city && country) {\n        //console.log(data);\n        console.log(data);\n        const dt = data.list[0].dt_txt;\n        this.setState({\n          temperature: data.list[0].main.temp,\n          city: data.city.name,\n          time: dt[1],\n          date: dt[0] //   country: data.sys.country,\n          //   humidity: data.main.humidity,\n          //   description: data.weather[0].description,\n          //   error: \"\"\n\n        });\n      } else {// this.setState({\n        //   temperature: undefined,\n        //   city: undefined,\n        //   country: undefined,\n        //   humidity: undefined,\n        //   description: undefined,\n        //   error: \"Please Enter the values\"\n        // });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temperature,\n      city: this.state.city,\n      date: this.state.date,\n      time: this.state.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gopikrishnamanchukonda/weatherass/src/App.js"],"names":["React","Form","Weather","API_KEY","App","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","console","log","dt","list","dt_txt","setState","main","temp","name","time","date","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,KADwB;;AAAA,SAShCM,UATgC,GASnB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C,CAHwB,CAIzB;;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,8DAAuDZ,IAAvD,cAA+DC,OAA/D,oBAAgFP,OAAhF,mBAA5B,CALwB,CAMzB;;AACC,YAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAId,IAAI,IAAIC,OAAZ,EAAqB;AACnB;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,cAAMI,EAAE,GAAGJ,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaC,MAAxB;AACA,aAAKC,QAAL,CAAc;AACXtB,UAAAA,WAAW,EAAEe,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaG,IAAb,CAAkBC,IADpB;AAEXtB,UAAAA,IAAI,EAAEa,IAAI,CAACb,IAAL,CAAUuB,IAFL;AAGXC,UAAAA,IAAI,EAACP,EAAE,CAAC,CAAD,CAHI;AAIXQ,UAAAA,IAAI,EAACR,EAAE,CAAC,CAAD,CAJI,CAMd;AACA;AACA;AACA;;AATc,SAAd;AAWD,OAfD,MAeO,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,KA1C+B;AAAA;;AA2ChCS,EAAAA,MAAM,GAAG;AACP,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKrB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,EAGF,oBAAC,OAAD;AACA,MAAA,IAAI,EAAG,KAAKR,KAAL,CAAWC,WADlB;AAEA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFjB;AAGA,MAAA,IAAI,EAAI,KAAKH,KAAL,CAAW4B,IAHnB;AAIA,MAAA,IAAI,EAAI,KAAK5B,KAAL,CAAW2B,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,CAFF;AAaD;;AAzD+B;;AA6DlC,eAAe7B,GAAf","sourcesContent":["import React from 'react';\nimport Form from './components/Form';\nimport './App.css';\nimport Weather from './components/Weather'\n\n\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\"\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n   // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`)\n   // const data = await api_call.json();\n    const data = await api_call.json();\n    if (city && country) {\n      //console.log(data);\n      console.log(data);\n      const dt = data.list[0].dt_txt;\n      this.setState({\n         temperature: data.list[0].main.temp,\n         city: data.city.name,\n         time:dt[1],\n         date:dt[0]\n\n      //   country: data.sys.country,\n      //   humidity: data.main.humidity,\n      //   description: data.weather[0].description,\n      //   error: \"\"\n       });\n    } else {\n      // this.setState({\n      //   temperature: undefined,\n      //   city: undefined,\n      //   country: undefined,\n      //   humidity: undefined,\n      //   description: undefined,\n      //   error: \"Please Enter the values\"\n      // });\n    }\n  }\n  render() { \n    return (\n    \n      <div>\n    <Form getWeather={this.getWeather}/>\n\n    <Weather \n    temp ={this.state.temperature}\n    city={this.state.city}\n    date = {this.state.date}\n    time = {this.state.time}\n    />\n    </div>\n     );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
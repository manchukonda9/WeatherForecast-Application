{"ast":null,"code":"var _jsxFileName = \"/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js\";\nimport React, { Component } from 'react';\nimport Form from './Form'; //import 'weather-icons/css/weather-icon.css';\n\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined,\n      length: undefined,\n      dates: undefined,\n      day1: undefined,\n      temps1: undefined,\n      times1: undefined,\n      day2: undefined,\n      temps2: undefined,\n      times2: undefined,\n      day3: undefined,\n      temps3: undefined,\n      times3: undefined,\n      day4: undefined,\n      temps4: undefined,\n      times4: undefined,\n      day5: undefined,\n      temps5: undefined,\n      times5: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\")); // const data = await api_call.json();\n\n      const data = await api_call.json();\n\n      if (city && country) {\n        //console.log(data);\n        console.log(\"in weatherjs\");\n        console.log(data);\n        const dt = data.list[0].dt_txt.split(\" \");\n        const apicity = data.city.name;\n        const length1 = data.list.length;\n        console.log(dt);\n        var ct = dt[0].substring(0, 10);\n        var days = [dt[0]];\n        var times = [];\n        var temps = [];\n        var tailedtimes = new Array(40).fill(0);\n        console.log(ct);\n        var j = 0;\n\n        for (var i = 0; i < 40; i++) {\n          j = i;\n          times.push(data.list[i].dt_txt.substring(11));\n          temps.push(data.list[i].main.temp);\n\n          if (data.list[i].dt_txt.substring(0, 10) !== ct) {\n            ct = data.list[i].dt_txt.substring(0, 10);\n            days.push(data.list[i].dt_txt.substring(0, 10));\n          }\n\n          tailedtimes[j] = data.list[i].dt_txt.substring(11);\n        }\n\n        console.log(days);\n        console.log(times);\n        console.log(temps);\n        this.setState({\n          city: apicity,\n          length: length1,\n          day1: days[0],\n          times1: times.slice(0, 8),\n          temps1: temps.slice(0, 8),\n          day2: days[1],\n          times2: times.slice(8, 16),\n          temps2: temps.slice(8, 16),\n          day3: days[2],\n          times3: times.slice(16, 24),\n          temps3: temps.slice(16, 24),\n          day4: days[3],\n          times4: times.slice(24, 32),\n          temps4: temps.slice(24, 32),\n          day5: days[4],\n          times5: times.slice(32, 40),\n          temps5: temps.slice(32, 40)\n        });\n      } else {}\n    };\n  }\n\n  render() {\n    //console.log(this.props.json1);\n    // console.log(d.city.name);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" City:\", this.state.city)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Day1:\", this.state.day1), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"times:\", this.state.times1), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"temps:\", this.state.temps1), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Day2:\", this.state.day2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"times:\", this.state.times2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"temps:\", this.state.temps2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Day3:\", this.state.day3), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"times:\", this.state.times3), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"temps:\", this.state.temps3), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Day4:\", this.state.day4), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"times:\", this.state.times4), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"temps:\", this.state.temps4), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Day5:\", this.state.day5), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"times\", this.state.times5), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"temps:\", this.state.temps5));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js"],"names":["React","Component","Form","API_KEY","Weather","state","city","undefined","length","dates","day1","temps1","times1","day2","temps2","times2","day3","temps3","times3","day4","temps4","times4","day5","temps5","times5","getWeather","e","preventDefault","target","elements","value","country","api_call","fetch","data","json","console","log","dt","list","dt_txt","split","apicity","name","length1","ct","substring","days","times","temps","tailedtimes","Array","fill","j","i","push","main","temp","setState","slice","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AAKA,MAAMC,OAAO,GAAG,kCAAhB;;AAIA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACtB;AACFC,MAAAA,IAAI,EAACC,SADH;AAEFC,MAAAA,MAAM,EAACD,SAFL;AAGFE,MAAAA,KAAK,EAACF,SAHJ;AAIFG,MAAAA,IAAI,EAACH,SAJH;AAKFI,MAAAA,MAAM,EAACJ,SALL;AAMFK,MAAAA,MAAM,EAACL,SANL;AAOFM,MAAAA,IAAI,EAACN,SAPH;AAQFO,MAAAA,MAAM,EAACP,SARL;AASFQ,MAAAA,MAAM,EAACR,SATL;AAUFS,MAAAA,IAAI,EAACT,SAVH;AAWFU,MAAAA,MAAM,EAACV,SAXL;AAYFW,MAAAA,MAAM,EAACX,SAZL;AAaFY,MAAAA,IAAI,EAACZ,SAbH;AAcFa,MAAAA,MAAM,EAACb,SAdL;AAeFc,MAAAA,MAAM,EAACd,SAfL;AAgBFe,MAAAA,IAAI,EAACf,SAhBH;AAiBFgB,MAAAA,MAAM,EAAChB,SAjBL;AAkBFiB,MAAAA,MAAM,EAACjB;AAlBL,KADsB;;AAAA,SAsB5BkB,UAtB4B,GAsBf,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMrB,IAAI,GAAGoB,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBvB,IAAlB,CAAuBwB,KAApC;AACA,YAAMC,OAAO,GAAGL,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAA1C,CAHsB,CAIvB;;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,8DAAuD3B,IAAvD,cAA+DyB,OAA/D,oBAAgF5B,OAAhF,mBAA5B,CALuB,CAMvB;;AACC,YAAM+B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAI7B,IAAI,IAAIyB,OAAZ,EAAqB;AACnB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,cAAMI,EAAE,GAAGJ,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaC,MAAb,CAAoBC,KAApB,CAA0B,GAA1B,CAAX;AACA,cAAMC,OAAO,GAAGR,IAAI,CAAC5B,IAAL,CAAUqC,IAA1B;AACA,cAAMC,OAAO,GAAGV,IAAI,CAACK,IAAL,CAAU/B,MAA1B;AACA4B,QAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACA,YAAIO,EAAE,GAACP,EAAE,CAAC,CAAD,CAAF,CAAMQ,SAAN,CAAgB,CAAhB,EAAkB,EAAlB,CAAP;AACA,YAAIC,IAAI,GAAC,CAACT,EAAE,CAAC,CAAD,CAAH,CAAT;AACA,YAAIU,KAAK,GAAC,EAAV;AACA,YAAIC,KAAK,GAAC,EAAV;AACA,YAAIC,WAAW,GAAC,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,CAAhB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AACA,YAAIQ,CAAC,GAAC,CAAN;;AAEA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,EAAd,EAAiBA,CAAC,EAAlB,EAAqB;AACnBD,UAAAA,CAAC,GAACC,CAAF;AACAN,UAAAA,KAAK,CAACO,IAAN,CAAWrB,IAAI,CAACK,IAAL,CAAUe,CAAV,EAAad,MAAb,CAAoBM,SAApB,CAA8B,EAA9B,CAAX;AACCG,UAAAA,KAAK,CAACM,IAAN,CAAWrB,IAAI,CAACK,IAAL,CAAUe,CAAV,EAAaE,IAAb,CAAkBC,IAA7B;;AACD,cAAGvB,IAAI,CAACK,IAAL,CAAUe,CAAV,EAAad,MAAb,CAAoBM,SAApB,CAA8B,CAA9B,EAAgC,EAAhC,MAAuCD,EAA1C,EAA6C;AACzCA,YAAAA,EAAE,GAAEX,IAAI,CAACK,IAAL,CAAUe,CAAV,EAAad,MAAb,CAAoBM,SAApB,CAA8B,CAA9B,EAAgC,EAAhC,CAAJ;AACAC,YAAAA,IAAI,CAACQ,IAAL,CAAUrB,IAAI,CAACK,IAAL,CAAUe,CAAV,EAAad,MAAb,CAAoBM,SAApB,CAA8B,CAA9B,EAAgC,EAAhC,CAAV;AAEH;;AAEDI,UAAAA,WAAW,CAACG,CAAD,CAAX,GAAenB,IAAI,CAACK,IAAL,CAAUe,CAAV,EAAad,MAAb,CAAoBM,SAApB,CAA8B,EAA9B,CAAf;AAGC;;AACHV,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AAEA,aAAKS,QAAL,CAAc;AACVpD,UAAAA,IAAI,EAAEoC,OADI;AAEVlC,UAAAA,MAAM,EAAEoC,OAFE;AAGVlC,UAAAA,IAAI,EAACqC,IAAI,CAAC,CAAD,CAHC;AAIVnC,UAAAA,MAAM,EAACoC,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAc,CAAd,CAJG;AAKVhD,UAAAA,MAAM,EAACsC,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAc,CAAd,CALG;AAMV9C,UAAAA,IAAI,EAACkC,IAAI,CAAC,CAAD,CANC;AAOVhC,UAAAA,MAAM,EAACiC,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAc,EAAd,CAPG;AAQV7C,UAAAA,MAAM,EAACmC,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAc,EAAd,CARG;AASV3C,UAAAA,IAAI,EAAC+B,IAAI,CAAC,CAAD,CATC;AAUV7B,UAAAA,MAAM,EAAC8B,KAAK,CAACW,KAAN,CAAY,EAAZ,EAAe,EAAf,CAVG;AAWV1C,UAAAA,MAAM,EAACgC,KAAK,CAACU,KAAN,CAAY,EAAZ,EAAe,EAAf,CAXG;AAYVxC,UAAAA,IAAI,EAAC4B,IAAI,CAAC,CAAD,CAZC;AAaV1B,UAAAA,MAAM,EAAC2B,KAAK,CAACW,KAAN,CAAY,EAAZ,EAAe,EAAf,CAbG;AAcVvC,UAAAA,MAAM,EAAC6B,KAAK,CAACU,KAAN,CAAY,EAAZ,EAAe,EAAf,CAdG;AAeVrC,UAAAA,IAAI,EAACyB,IAAI,CAAC,CAAD,CAfC;AAgBVvB,UAAAA,MAAM,EAACwB,KAAK,CAACW,KAAN,CAAY,EAAZ,EAAe,EAAf,CAhBG;AAiBVpC,UAAAA,MAAM,EAAC0B,KAAK,CAACU,KAAN,CAAY,EAAZ,EAAe,EAAf;AAjBG,SAAd;AAoBD,OAtDD,MAsDO,CAEN;AACF,KAvFyB;AAAA;;AAwF5BC,EAAAA,MAAM,GAAG;AACL;AAED;AACC,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKnC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKpB,KAAL,CAAWC,IAAtB,CADD,CAHA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKD,KAAL,CAAWK,IAApB,CAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKL,KAAL,CAAWO,MAArB,CAZA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKP,KAAL,CAAWM,MAArB,CAbA,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKN,KAAL,CAAWQ,IAApB,CAdA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKR,KAAL,CAAWU,MAArB,CAfA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKV,KAAL,CAAWS,MAArB,CAhBA,EAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKT,KAAL,CAAWW,IAApB,CAjBA,EAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKX,KAAL,CAAWa,MAArB,CAlBA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKb,KAAL,CAAWY,MAArB,CAnBA,EAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKZ,KAAL,CAAWc,IAApB,CApBA,EAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKd,KAAL,CAAWgB,MAArB,CArBA,EAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKhB,KAAL,CAAWe,MAArB,CAtBA,EAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKf,KAAL,CAAWiB,IAApB,CAvBA,EAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKjB,KAAL,CAAWmB,MAApB,CAxBA,EAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKnB,KAAL,CAAWkB,MAArB,CAzBA,CAFJ;AA8BH;;AA1H2B;;AA6HhC,eAAenB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form';\n//import 'weather-icons/css/weather-icon.css';\n\n\n\n\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\n\n\nclass Weather extends Component {\n    state={\n        city:undefined,\n        length:undefined,\n        dates:undefined,\n        day1:undefined,\n        temps1:undefined,\n        times1:undefined,\n        day2:undefined,\n        temps2:undefined,\n        times2:undefined,\n        day3:undefined,\n        temps3:undefined,\n        times3:undefined,\n        day4:undefined,\n        temps4:undefined,\n        times4:undefined,\n        day5:undefined,\n        temps5:undefined,\n        times5:undefined,\n        \n    }\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n       // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n       const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`);\n       // const data = await api_call.json();\n        const data = await api_call.json();\n        if (city && country) {\n          //console.log(data);\n          console.log(\"in weatherjs\");\n          console.log(data);\n          const dt = data.list[0].dt_txt.split(\" \");\n          const apicity = data.city.name;\n          const length1 = data.list.length;\n          console.log(dt)\n          var ct=dt[0].substring(0,10);\n          var days=[dt[0]];\n          var times=[];\n          var temps=[];\n          var tailedtimes=new Array(40).fill(0);\n          console.log(ct);\n          var j=0;\n \n          for(var i=0;i<40;i++){\n            j=i\n            times.push(data.list[i].dt_txt.substring(11));\n             temps.push(data.list[i].main.temp);\n            if(data.list[i].dt_txt.substring(0,10)!== ct){\n                ct =data.list[i].dt_txt.substring(0,10)\n                days.push(data.list[i].dt_txt.substring(0,10));\n             \n            }\n            \n            tailedtimes[j]=data.list[i].dt_txt.substring(11);\n        \n\n            }\n          console.log(days);\n          console.log(times);\n          console.log(temps);\n          \n          this.setState({\n              city: apicity,\n              length :length1,\n              day1:days[0],\n              times1:times.slice(0,8),\n              temps1:temps.slice(0,8),\n              day2:days[1],\n              times2:times.slice(8,16),\n              temps2:temps.slice(8,16),\n              day3:days[2],\n              times3:times.slice(16,24),\n              temps3:temps.slice(16,24),\n              day4:days[3],\n              times4:times.slice(24,32),\n              temps4:temps.slice(24,32),\n              day5:days[4],\n              times5:times.slice(32,40),\n              temps5:temps.slice(32,40),\n          });\n       \n        } else {\n      \n        }\n      }\n    render() { \n        //console.log(this.props.json1);\n       \n       // console.log(d.city.name);\n        return (  \n           \n            <div>\n            \n            <Form getWeather={this.getWeather}/> \n            <div>\n             <h1> City:{this.state.city}</h1>\n            </div>\n           {/*<p>Date:{this.props.date}</p>\n            <p>Time:{this.props.time}</p>\n            <p>temp:{this.props.temp}</p>\n        <p>length:{this.state.length}</p>*/}\n        \n            <p>Day1:{this.state.day1}</p>\n            <p>times:{this.state.times1}</p>\n            <p>temps:{this.state.temps1}</p>\n            <p>Day2:{this.state.day2}</p>\n            <p>times:{this.state.times2}</p>\n            <p>temps:{this.state.temps2}</p>\n            <p>Day3:{this.state.day3}</p>\n            <p>times:{this.state.times3}</p>\n            <p>temps:{this.state.temps3}</p>\n            <p>Day4:{this.state.day4}</p>\n            <p>times:{this.state.times4}</p>\n            <p>temps:{this.state.temps4}</p>\n            <p>Day5:{this.state.day5}</p>\n            <p>times{this.state.times5}</p>\n            <p>temps:{this.state.temps5}</p>\n            \n            </div> );\n    }\n}\n \nexport default Weather;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined,\n      length: undefined,\n      dates: undefined,\n      temps: undefined,\n      times: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\")); // const data = await api_call.json();\n\n      const data = await api_call.json();\n\n      if (city && country) {\n        //console.log(data);\n        console.log(\"in weatherjs\");\n        console.log(data);\n        const dt = data.list[0].dt_txt.split(\" \");\n        const apicity = data.city.name;\n        const length1 = data.list.length;\n        console.log(dt);\n        var ct = dt[0].substring(0, 10);\n        var days = [dt[0]];\n        var times = [];\n        var temps = [];\n        var tailedtimes = new Array(40).fill(0);\n        console.log(ct);\n        var j = 0;\n\n        for (var i = 0; i < 40; i++) {\n          j = i;\n          times.push(data.list[i].dt_txt.substring(11));\n          temps.push(data.list[i].main.temp);\n\n          if (data.list[i].dt_txt.substring(0, 10) !== ct) {\n            ct = data.list[i].dt_txt.substring(0, 10);\n            days.push(data.list[i].dt_txt.substring(0, 10));\n          }\n\n          tailedtimes[j] = data.list[i].dt_txt.substring(11);\n        }\n\n        console.log(days);\n        console.log(times);\n        console.log(temps);\n        this.setState({\n          city: apicity,\n          length: length1,\n          times: times,\n          dates: days,\n          temps: temps\n        });\n      } else {}\n    };\n  }\n\n  render() {\n    //console.log(this.props.json1);\n    // console.log(d.city.name);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" City:\", this.state.city)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Day1:\", this.state.times), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"times\", this.state.dates), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"temps:\", this.state.temps), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Day2:\", this.state.times), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"times\", this.state.dates), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"temps:\", this.state.temps), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Day3:\", this.state.times), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"times\", this.state.dates), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"temps:\", this.state.temps), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Day4:\", this.state.times), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"times\", this.state.dates), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"temps:\", this.state.temps), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Day5:\", this.state.times), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"times\", this.state.dates), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"temps:\", this.state.temps));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js"],"names":["React","Component","Form","API_KEY","Weather","state","city","undefined","length","dates","temps","times","getWeather","e","preventDefault","target","elements","value","country","api_call","fetch","data","json","console","log","dt","list","dt_txt","split","apicity","name","length1","ct","substring","days","tailedtimes","Array","fill","j","i","push","main","temp","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form';\n\n\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\n\n\nclass Weather extends Component {\n    state={\n        city:undefined,\n        length:undefined,\n        dates:undefined,\n        temps:undefined,\n        times:undefined\n    }\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n       // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n       const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`);\n       // const data = await api_call.json();\n        const data = await api_call.json();\n        if (city && country) {\n          //console.log(data);\n          console.log(\"in weatherjs\");\n          console.log(data);\n          const dt = data.list[0].dt_txt.split(\" \");\n          const apicity = data.city.name;\n          const length1 = data.list.length;\n          console.log(dt)\n          var ct=dt[0].substring(0,10);\n          var days=[dt[0]];\n          var times=[];\n          var temps=[];\n          var tailedtimes=new Array(40).fill(0);\n          console.log(ct);\n          var j=0;\n \n          for(var i=0;i<40;i++){\n            j=i\n            times.push(data.list[i].dt_txt.substring(11));\n             temps.push(data.list[i].main.temp);\n            if(data.list[i].dt_txt.substring(0,10)!== ct){\n                ct =data.list[i].dt_txt.substring(0,10)\n                days.push(data.list[i].dt_txt.substring(0,10));\n             \n            }\n            \n            tailedtimes[j]=data.list[i].dt_txt.substring(11);\n        \n\n            }\n          console.log(days);\n          console.log(times);\n          console.log(temps);\n          \n          this.setState({\n              city: apicity,\n              length :length1,\n              times:times,\n              dates:days,\n              temps:temps\n          });\n       \n        } else {\n      \n        }\n      }\n    render() { \n        //console.log(this.props.json1);\n       \n       // console.log(d.city.name);\n        return (  \n           \n            <div>\n            \n            <Form getWeather={this.getWeather}/> \n            <div>\n             <h1> City:{this.state.city}</h1>\n            </div>\n           {/*<p>Date:{this.props.date}</p>\n            <p>Time:{this.props.time}</p>\n            <p>temp:{this.props.temp}</p>\n        <p>length:{this.state.length}</p>*/}\n        \n            <p>Day1:{this.state.times}</p>\n            <p>times{this.state.dates}</p>\n            <p>temps:{this.state.temps}</p>\n            <p>Day2:{this.state.times}</p>\n            <p>times{this.state.dates}</p>\n            <p>temps:{this.state.temps}</p>\n            <p>Day3:{this.state.times}</p>\n            <p>times{this.state.dates}</p>\n            <p>temps:{this.state.temps}</p>\n            <p>Day4:{this.state.times}</p>\n            <p>times{this.state.dates}</p>\n            <p>temps:{this.state.temps}</p>\n            <p>Day5:{this.state.times}</p>\n            <p>times{this.state.dates}</p>\n            <p>temps:{this.state.temps}</p>\n            \n            </div> );\n    }\n}\n \nexport default Weather;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
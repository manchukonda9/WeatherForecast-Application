{"ast":null,"code":"var _jsxFileName = \"/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\")); // const data = await api_call.json();\n\n      const data = await api_call.json();\n\n      if (city && country) {\n        //console.log(data);\n        console.log(data);\n        const dt = data.list[0].dt_txt.split(\" \");\n        console.log(dt);\n        this.setState({\n          json1: data,\n          temperature: data.list[0].main.temp,\n          city: data.city.name,\n          time: dt[1],\n          date: dt[0] //   country: data.sys.country,\n          //   humidity: data.main.humidity,\n          //   description: data.weather[0].description,\n          //   error: \"\"\n\n        });\n      } else {// this.setState({\n        //   temperature: undefined,\n        //   city: undefined,\n        //   country: undefined,\n        //   humidity: undefined,\n        //   description: undefined,\n        //   error: \"Please Enter the values\"\n        // });\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.json1); // console.log(d.city.name);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"City:\", this.props.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Date:\", this.props.date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Time:\", this.props.time), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"temp:\", this.props.temp));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/gopikrishnamanchukonda/weatherass/src/components/Weather.js"],"names":["React","Component","Form","API_KEY","Weather","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","data","json","console","log","dt","list","dt_txt","split","setState","json1","temperature","main","temp","name","time","date","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC5BI,UAD4B,GACf,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;AACA,YAAMC,OAAO,GAAGN,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAA1C,CAHsB,CAIvB;;AACC,YAAME,QAAQ,GAAG,MAAMC,KAAK,8DAAuDN,IAAvD,cAA+DI,OAA/D,oBAAgFT,OAAhF,mBAA5B,CALsB,CAMvB;;AACC,YAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAIR,IAAI,IAAII,OAAZ,EAAqB;AACnB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,cAAMI,EAAE,GAAGJ,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaC,MAAb,CAAoBC,KAApB,CAA0B,GAA1B,CAAX;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACA,aAAKI,QAAL,CAAc;AACXC,UAAAA,KAAK,EAACT,IADK;AAEXU,UAAAA,WAAW,EAAEV,IAAI,CAACK,IAAL,CAAU,CAAV,EAAaM,IAAb,CAAkBC,IAFpB;AAGXnB,UAAAA,IAAI,EAAEO,IAAI,CAACP,IAAL,CAAUoB,IAHL;AAIXC,UAAAA,IAAI,EAACV,EAAE,CAAC,CAAD,CAJI;AAKXW,UAAAA,IAAI,EAACX,EAAE,CAAC,CAAD,CALI,CAOd;AACA;AACA;AACA;;AAVc,SAAd;AAYD,OAjBD,MAiBO,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,KApCyB;AAAA;;AAqC5BY,EAAAA,MAAM,GAAG;AACLd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKc,KAAL,CAAWR,KAAvB,EADK,CAGN;;AACC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKQ,KAAL,CAAWxB,IAApB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKwB,KAAL,CAAWF,IAApB,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKE,KAAL,CAAWH,IAApB,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS,KAAKG,KAAL,CAAWL,IAApB,CALA,CADJ;AAUH;;AAnD2B;;AAsDhC,eAAevB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form';\n\n\nconst API_KEY = \"b5eaa19399377445bfddb5e2edce42e9\"\nclass Weather extends Component {\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n       // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n        const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`)\n       // const data = await api_call.json();\n        const data = await api_call.json();\n        if (city && country) {\n          //console.log(data);\n          console.log(data);\n          const dt = data.list[0].dt_txt.split(\" \");\n          console.log(dt)\n          this.setState({\n             json1:data,\n             temperature: data.list[0].main.temp,\n             city: data.city.name,\n             time:dt[1],\n             date:dt[0]\n    \n          //   country: data.sys.country,\n          //   humidity: data.main.humidity,\n          //   description: data.weather[0].description,\n          //   error: \"\"\n           });\n        } else {\n          // this.setState({\n          //   temperature: undefined,\n          //   city: undefined,\n          //   country: undefined,\n          //   humidity: undefined,\n          //   description: undefined,\n          //   error: \"Please Enter the values\"\n          // });\n        }\n      }\n    render() { \n        console.log(this.props.json1);\n       \n       // console.log(d.city.name);\n        return (    \n            <div>\n    \n            <p>City:{this.props.city}</p>\n            <p>Date:{this.props.date}</p>\n            <p>Time:{this.props.time}</p>\n            <p>temp:{this.props.temp}</p>\n            \n            \n            </div> );\n    }\n}\n \nexport default Weather;\n\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gopikrishnamanchukonda/weatherass/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value; // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const api5_call = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\")); // const data = await api_call.json();\n\n      const data5 = await api5_call.json();\n\n      if (city && country) {\n        //console.log(data);\n        console.log(data5);\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please Enter the values\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Weather forcast\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gopikrishnamanchukonda/weatherass/src/App.js"],"names":["React","App","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api5_call","fetch","API_KEY","data5","json","console","log","setState","data","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,KADwB;;AAAA,SAShCM,UATgC,GASnB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C,CAHwB,CAIzB;;AACC,YAAMC,SAAS,GAAG,MAAMC,KAAK,8DAAuDZ,IAAvD,cAA+DC,OAA/D,oBAAgFY,OAAhF,mBAA7B,CALwB,CAMzB;;AACC,YAAMC,KAAK,GAAG,MAAMH,SAAS,CAACI,IAAV,EAApB;;AACA,UAAIf,IAAI,IAAIC,OAAZ,EAAqB;AACnB;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,aAAKI,QAAL,CAAc;AACZpB,UAAAA,WAAW,EAAEqB,IAAI,CAACC,IAAL,CAAUC,IADX;AAEZrB,UAAAA,IAAI,EAAEmB,IAAI,CAACG,IAFC;AAGZrB,UAAAA,OAAO,EAAEkB,IAAI,CAACI,GAAL,CAAStB,OAHN;AAIZC,UAAAA,QAAQ,EAAEiB,IAAI,CAACC,IAAL,CAAUlB,QAJR;AAKZC,UAAAA,WAAW,EAAEgB,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBrB,WALjB;AAMZC,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD,OAXD,MAWO;AACL,aAAKc,QAAL,CAAc;AACZpB,UAAAA,WAAW,EAAEC,SADD;AAEZC,UAAAA,IAAI,EAAED,SAFM;AAGZE,UAAAA,OAAO,EAAEF,SAHG;AAIZG,UAAAA,QAAQ,EAAEH,SAJE;AAKZI,UAAAA,WAAW,EAAEJ,SALD;AAMZK,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD;AACF,KAtC+B;AAAA;;AAuChCqB,EAAAA,MAAM,GAAG;AACP,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAR;AAGD;;AA3C+B;;AA+ClC,eAAe9B,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n   // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const api5_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`)\n   // const data = await api_call.json();\n    const data5 = await api5_call.json();\n    if (city && country) {\n      //console.log(data);\n      console.log(data5);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please Enter the values\"\n      });\n    }\n  }\n  render() { \n    return (<div>\n      Weather forcast\n      </div>  );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}